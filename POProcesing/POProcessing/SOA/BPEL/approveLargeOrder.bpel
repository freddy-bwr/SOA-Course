<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Sat Oct 31 11:38:57 CST 2020
  Author:  farrokh
  Type: BPEL 1.1 Process
  Purpose: Asynchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="approveLargeOrder"
         targetNamespace="http://xmlns.oracle.com/POProcesing/POProcessing/approveLargeOrder"
         xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:client="http://xmlns.oracle.com/POProcesing/POProcessing/approveLargeOrder"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:ns1="http://oracle.com/sca/soapservice/CreditCardValidation/validationForCC/getStatusByCC"
         xmlns:ns3="http://www.globalcompany.com/ns/CCAuthorizationService"
         xmlns:ns2="http://xmlns.oracle.com/ns/order"
         xmlns:bpel2="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:ess="http://xmlns.oracle.com/scheduler" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:ns4="http://xmlns.oracle.com/bpel/workflow/taskService"
         xmlns:task="http://xmlns.oracle.com/bpel/workflow/task"
         xmlns:wfcommon="http://xmlns.oracle.com/bpel/workflow/common"
         xmlns:wf="http://schemas.oracle.com/bpel/extensions/workflow"
         xmlns:ns5="http://xmlns.oracle.com/bpel/workflow/TaskEvidenceService">

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <bpelx:annotation>
        <bpelx:analysis>
            <bpelx:property name="wsdlFile">
                <![CDATA[../WSDLs/approveLargeOrder.wsdl]]>
            </bpelx:property>
        </bpelx:analysis>
    </bpelx:annotation>
    <partnerLinks>
        <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
        <partnerLink name="approvelargeorder_client" partnerLinkType="client:approveLargeOrder" myRole="approveLargeOrderProvider" partnerRole="approveLargeOrderRequester"/>
        <partnerLink name="getCreditCardStatus" partnerLinkType="ns1:getCreditCardStatus" partnerRole="execute_ptt"/>
        <partnerLink name="ManualPOApproval.TaskService" partnerLinkType="ns4:TaskService" partnerRole="TaskService"
                     myRole="TaskServiceCallbackListener"/>
    </partnerLinks>

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        VARIABLES                                                        
        List of messages and XML documents used within this BPEL process 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <variables>
        <!-- Reference to the message passed as input during initiation -->
        <variable name="inputVariable" messageType="client:approveLargeOrderRequestMessage"/>

        <!-- Reference to the message that will be sent back to the requester during callback -->
        <variable name="outputVariable" messageType="client:approveLargeOrderResponseMessage"/>
        <variable name="invokeCCStatusService_execute_InputVariable" messageType="ns1:requestMessage"/>
        <variable name="invokeCCStatusService_execute_OutputVariable" messageType="ns1:replyMessage"/>
        <variable messageType="bpelx:RuntimeFaultMessage" name="FaultVar"/>
        <variable name="ManualPOApproval1_globalVariable" messageType="ns4:taskMessage"/>
    </variables>

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
       ORCHESTRATION LOGIC                                               
       Set of activities coordinating the flow of messages across the    
       services integrated within this business process                  
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <sequence name="main">
        <!-- Receive input from requestor. (Note: This maps to operation defined in approveLargeOrder.wsdl) -->
        <receive name="receiveInput" partnerLink="approvelargeorder_client" portType="client:approveLargeOrder" operation="process" variable="inputVariable" createInstance="yes"/>
        <assign name="assignCCNumber">
            <copy>
                <from bpelx:language="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0" variable="inputVariable"
                      part="payload" query="/ns2:Order/ns2:creditCardInfo/ns2:cardNumber"/>
                <to bpelx:language="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"
                    variable="invokeCCStatusService_execute_InputVariable" part="InputMessagePart"
                    query="/ns3:creditcardStatusRequest/ns3:CCNumber"/>
            </copy>
            <copy>
                <from bpelx:language="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0" variable="inputVariable"
                      part="payload" query="/ns2:Order"/>
                <to bpelx:language="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0" variable="outputVariable"
                    part="payload" query="/ns2:Order"/>
            </copy>
        </assign>
        <scope name="checkCC">
            <faultHandlers>
                <catch faultName="bpelx:bindingFault" faultVariable="FaultVar">
                    <switch name="Switch1">
                        <case condition="bpws:getVariableData('FaultVar','code') = 20001">
                            <assign name="Assign_UNKNOWNCC">
                                <copy>
                                    <from expression="'UNKNOWN CC'"/>
                                    <to bpelx:language="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"
                                        variable="invokeCCStatusService_execute_OutputVariable" part="OutputMessagePart"
                                        query="/ns3:creditcardStatus"/>
                                </copy>
                            </assign>
                        </case>
                        <otherwise>
                            <throw name="Throw_Binding_Fault" faultName="bpelx:bindingFault" faultVariable="FaultVar"/>
                        </otherwise>
                    </switch>
                </catch>
            </faultHandlers>
            <invoke name="invokeCCStatusService" partnerLink="getCreditCardStatus"
                    inputVariable="invokeCCStatusService_execute_InputVariable"
                    outputVariable="invokeCCStatusService_execute_OutputVariable" portType="ns1:execute_ptt"
                    operation="execute"/>
        </scope>
        <switch name="EvaluateCCStatus">
            <case condition="bpws:getVariableData('invokeCCStatusService_execute_OutputVariable','OutputMessagePart','/ns3:creditcardStatus') = 'VALID'">
                <sequence name="Sequence1">
                    <scope name="ManualPOApproval2"
                           xmlns:wf="http://schemas.oracle.com/bpel/extensions/workflow"
                           wf:key="ManualPOApproval1_globalVariable">
                        <bpelx:annotation>
                            <bpelx:pattern patternName="bpelx:workflow"/>
                        </bpelx:annotation>
                        <variables>
                            <variable name="initiateTaskInput" messageType="ns4:initiateTaskMessage"/>
                            <variable name="initiateTaskResponseMessage" messageType="ns4:initiateTaskResponseMessage"/>
                        </variables>
                        <sequence>
                            <assign name="ManualPOApproval2_AssignTaskAttributes">
                                <copy>
                                    <from expression="string('Approve Order')"/>
                                    <to variable="initiateTaskInput" part="payload"
                                        query="/ns4:initiateTask/task:task/task:title"/>
                                </copy>
                                <copy>
                                    <from expression="number(3)"/>
                                    <to variable="initiateTaskInput" part="payload"
                                        query="/ns4:initiateTask/task:task/task:priority"/>
                                </copy>
                                <copy>
                                    <from expression="string('Approve Order')"/>
                                    <to variable="initiateTaskInput" part="payload"
                                        query="/ns4:initiateTask/task:task/task:title"/>
                                </copy>
                                <copy>
                                    <from expression="number(3)"/>
                                    <to variable="initiateTaskInput" part="payload"
                                        query="/ns4:initiateTask/task:task/task:priority"/>
                                </copy>
                                <copy>
                                    <from><payload xmlns="http://xmlns.oracle.com/bpel/workflow/task">
	<Order xmlns="http://xmlns.oracle.com/ns/order"/> 
</payload></from>
                                    <to variable="initiateTaskInput" part="payload"
                                        query="/ns4:initiateTask/task:task/task:payload"/>
                                </copy>
                                <copy>
                                    <from variable="outputVariable" part="payload" query="/ns2:Order"/>
                                    <to variable="initiateTaskInput" part="payload"
                                        query="/ns4:initiateTask/task:task/task:payload/ns2:Order"/>
                                </copy>
                            </assign>
                            <invoke name="initiateTask_ManualPOApproval2" partnerLink="ManualPOApproval.TaskService"
                                    operation="initiateTask" portType="ns4:TaskService"
                                    inputVariable="initiateTaskInput" outputVariable="initiateTaskResponseMessage"/>
                            <receive name="receiveCompletedTask_ManualPOApproval2"
                                     partnerLink="ManualPOApproval.TaskService" portType="ns4:TaskServiceCallback"
                                     operation="onTaskCompleted" variable="ManualPOApproval1_globalVariable"
                                     createInstance="no"/>
                        </sequence>
                    </scope>
                    <switch name="taskSwitch">
                        <case condition="$ManualPOApproval1_globalVariable.payload/task:systemAttributes/task:outcome = 'REJECT'">
                            <bpelx:annotation>
                                <bpelx:pattern>Task outcome is REJECT</bpelx:pattern>
                                <bpelx:general>
                                    <bpelx:property name="userLabel">
                                        <![CDATA[Task outcome is REJECT]]>
                                    </bpelx:property>
                                </bpelx:general>
                            </bpelx:annotation>
                            <sequence>
                                <assign>
                                    <copy>
                                        <from variable="ManualPOApproval1_globalVariable" part="payload"
                                              query="/task:task/task:payload/ns2:Order"/>
                                        <to variable="outputVariable" part="payload" query="/ns2:Order"/>
                                    </copy>
                                    <copy>
                                        <from expression="'rejected'"/>
                                        <to bpelx:language="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"
                                            variable="outputVariable" part="payload" query="/ns2:Order/ns2:status"/>
                                    </copy>
                                </assign>
                            </sequence>
                        </case>
                        <case condition="$ManualPOApproval1_globalVariable.payload/task:systemAttributes/task:outcome = 'APPROVE'">
                            <bpelx:annotation>
                                <bpelx:pattern>Task outcome is APPROVE</bpelx:pattern>
                                <bpelx:general>
                                    <bpelx:property name="userLabel">
                                        <![CDATA[Task outcome is APPROVE]]>
                                    </bpelx:property>
                                </bpelx:general>
                            </bpelx:annotation>
                            <sequence>
                                <assign>
                                    <copy>
                                        <from variable="ManualPOApproval1_globalVariable" part="payload"
                                              query="/task:task/task:payload/ns2:Order"/>
                                        <to variable="outputVariable" part="payload" query="/ns2:Order"/>
                                    </copy>
                                </assign>
                                <assign name="assignApproval">
                                    <copy>
                                        <from expression="'approved'"/>
                                        <to bpelx:language="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"
                                            variable="outputVariable" part="payload" query="/ns2:Order/ns2:status"/>
                                    </copy>
                                </assign>
                            </sequence>
                        </case>
                        <otherwise>
                            <sequence>
                                <assign>
                                    <copy>
                                        <from variable="ManualPOApproval1_globalVariable" part="payload"
                                              query="/task:task/task:payload/ns2:Order"/>
                                        <to variable="outputVariable" part="payload" query="/ns2:Order"/>
                                    </copy>
                                    <copy>
                                        <from expression="'expired'"/>
                                        <to bpelx:language="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"
                                            variable="outputVariable" part="payload" query="/ns2:Order/ns2:status"/>
                                    </copy>
                                </assign>
                            </sequence>
                        </otherwise>
                    </switch>
                </sequence>
            </case>
            <otherwise>
                <assign name="assignInvalidCC">
                    <copy>
                        <from expression="'invalidCreditCard'"/>
                        <to bpelx:language="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0" variable="outputVariable"
                            part="payload" query="/ns2:Order/ns2:status"/>
                    </copy>
                </assign>
            </otherwise>
        </switch>
        <!-- 
          Asynchronous callback to the requester. (Note: the callback location and correlation id is transparently handled using WS-addressing.)
        -->
        <invoke name="callbackClient" partnerLink="approvelargeorder_client" portType="client:approveLargeOrderCallback" operation="processResponse" inputVariable="outputVariable"/>
    </sequence>
</process>